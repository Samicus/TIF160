import cv2
import mediapipe as mp
import time
import numpy as np

cap = cv2.VideoCapture(0)

mpHands = mp.solutions.hands
hands = mpHands.Hands(static_image_mode=False,
                      max_num_hands=1,
                      min_detection_confidence=0.5,
                      min_tracking_confidence=0.5)
mpDraw = mp.solutions.drawing_utils

pTime = 0
cTime = 0

while True:
    success, img = cap.read()
    imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    #imgblank = np.zeros(img.shape, np.uint8)
    imgblank = np.zeros(img.shape, np.uint8)
    results = hands.process(imgRGB)
    #print(results.multi_hand_landmarks)
    h, w, c = imgblank.shape
    print(f"Height: {h}, width: {w}")
    base_offset = np.array([w // 2, h // 2])
    wrist_index = 0
    middle_knuckle_index = 9
    if results.multi_hand_landmarks:
        for handLms in results.multi_hand_landmarks:

            wr_lm = [lm for id, lm in enumerate(handLms.landmark) if id == wrist_index][0]
            wr_pos = int(wr_lm.x *w), int(wr_lm.y*h)

            kn_lm = [lm for id, lm in enumerate(handLms.landmark) if id == middle_knuckle_index][0]
            kn_pos = int(kn_lm.x *w), int(kn_lm.y*h)

            wrist_pos_diff = wr_pos - base_offset

            for id, lm in enumerate(handLms.landmark):
                cx, cy = int(lm.x *w), int(lm.y*h)
                
                clr = (255,0,255) if id == 1 else (255,255,255)
                cv2.circle(imgblank, np.array([cx,cy]) - wrist_pos_diff, 3, clr, cv2.FILLED)
            
            #mpDraw.draw_landmarks(imgblank, handLms, mpHands.HAND_CONNECTIONS)
            cv2.line(imgblank, wr_pos - wrist_pos_diff, kn_pos - wrist_pos_diff, (255,0,0), 4)


    cTime = time.time()
    fps = 1/(cTime-pTime)
    pTime = cTime

    cv2.putText(imgblank,str(int(fps)), (10,70), cv2.FONT_HERSHEY_PLAIN, 3, (255,0,255), 3)

    cv2.imshow("Image", imgblank)
    cv2.waitKey(1)